project(QTAROUND)
cmake_minimum_required(VERSION 2.8.8)

IF(NOT DEFINED VERSION OR VERSION STREQUAL "")
message(FATAL_ERROR "Define VERSION")
ENDIF(NOT DEFINED VERSION OR VERSION STREQUAL "")

IF(NOT DEFINED LONG_VERSION OR LONG_VERSION STREQUAL "")
set(LONG_VERSION ${VERSION})
ENDIF(NOT DEFINED LONG_VERSION OR LONG_VERSION STREQUAL "")

option(ENABLE_MULTIARCH "Enable support for multi-arch distros (lib64)" OFF)
IF(ENABLE_MULTIARCH)
  IF(CMAKE_SIZEOF_VOID_P EQUAL 4)
    SET(LIB_SUFFIX "")
  ELSE(CMAKE_SIZEOF_VOID_P EQUAL 4)
    SET(LIB_SUFFIX 64)
  ENDIF(CMAKE_SIZEOF_VOID_P EQUAL 4)
ELSE()
  SET(LIB_SUFFIX "")
ENDIF()
set(DST_LIB lib${LIB_SUFFIX})

message(STATUS "Version ${VERSION}")
message(STATUS "Long version is ${LONG_VERSION}")
message(STATUS "Multiarch is ${ENABLE_MULTIARCH}")

find_package(PkgConfig REQUIRED)
find_package(Qt5Core REQUIRED)

set(CMAKE_CXX_FLAGS
  "${CMAKE_CXX_FLAGS} -fPIC -W -Wall -Wextra -Werror -g -O2 -std=c++0x")

#-Wno-psabi is to remove next g++ warning/note:
#the mangling of 'va_list' has changed in GCC 4.4
set(CMAKE_CXX_FLAGS
  "${CMAKE_CXX_FLAGS} -Wno-psabi")

# fix for gcc 4.6 specific compiling/linking issues, no dwarf-4
set(CMAKE_CXX_FLAGS
  "${CMAKE_CXX_FLAGS} -gdwarf-3"
  )

include_directories(
  ${CMAKE_CURRENT_SOURCE_DIR}/include
)

pkg_check_modules(COR cor REQUIRED)

include_directories(
  ${COR_INCLUDE_DIRS}
)
link_directories(
  ${COR_LIBRARY_DIRS}
)

set(QTAROUND_DBUS_MOC_HEADERS
  ${CMAKE_SOURCE_DIR}/include/qtaround/dbus.hpp
)

set(QTAROUND_MOC_HEADERS
  ${CMAKE_SOURCE_DIR}/include/qtaround/mt.hpp
)

add_subdirectory(src)
add_subdirectory(tests)

configure_file(qtaround.pc.in qtaround.pc @ONLY)
configure_file(qtaround-1.pc.in qtaround-1.pc @ONLY)
configure_file(qtaround-dbus.pc.in qtaround-dbus.pc @ONLY)

install(FILES
  ${CMAKE_CURRENT_BINARY_DIR}/qtaround.pc
  ${CMAKE_CURRENT_BINARY_DIR}/qtaround-1.pc
  ${CMAKE_CURRENT_BINARY_DIR}/qtaround-dbus.pc
  DESTINATION
  ${DST_LIB}/pkgconfig
)

install(
  DIRECTORY include/qtaround
  DESTINATION include
  FILES_MATCHING
  PATTERN "*.hpp"
  PATTERN "*.h"
)
